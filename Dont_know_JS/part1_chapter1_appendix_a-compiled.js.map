{"version":3,"sources":["part1_chapter1_appendix_a.js"],"names":[],"mappings":"AAAA;;;AAGA;AACA;AACA,SAAS,GAAT,GAAe;AACX,UAAQ,GAAR,CAAa,CAAb,EADW,CACO;AACrB;AACD,SAAS,GAAT,GAAe;AACX,MAAI,IAAI,CAAR;AACA;AACH;AACD,IAAI,IAAI,CAAR;AACA;AACA;;AAGA;;AAEA","file":"part1_chapter1_appendix_a-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2016/12/17.\r\n */\r\n/* 动态作用域 */\r\n/* 词法作用域最重要的特征是它的定义过程发生在代码的书写阶段 */\r\nfunction foo() {\r\n    console.log( a ); // 2\r\n}\r\nfunction bar() {\r\n    var a = 3;\r\n    foo();\r\n}\r\nvar a = 2;\r\nbar();\r\n/* 词法作用域让 foo() 中的 a 通过 RHS 引用到了全局作用域中的 a， 因此会输出 2。 */\r\n\r\n\r\n/* 而动态作用域并不关心函数和作用域是如何声明以及在何处声明的， 只关心它们从何处调用 */\r\n\r\n/* 需要明确的是， 事实上 JavaScript 并不具有动态作用域。 它只有词法作用域， 简单明了。\r\n 但是 this 机制某种程度上很像动态作用域。*/\r\n\r\n"]}